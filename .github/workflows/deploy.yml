# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "release" ]


permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
  
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    ## create application-prod1.properties
    - name: make application-mysql-db.properties
      if: contains(github.ref, 'release') # branch가 main 일 때, 나머지는 위와 동일
      run: |
          cd ./BE/src/main/resources
          touch ./application-mysql-db.yml
          ls
          echo "${{ secrets.PROPERTIES_MYSQL_DB }}" > ./application-mysql-db.yml
      shell: bash

    ## gradle build
    - name: Build with Gradle!
      run: | 
          cd ./BE
          ./gradlew build -x test
    ## docker build & push to production
    - name: Docker build & push to dockerhub
      if: contains(github.ref, 'release')
      run: |
          cd ./BE
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_REPO }}/codesquad-airbnb-team21-prod .
          docker push ${{ secrets.DOCKER_REPO }}/codesquad-airbnb-team21-prod
    
    ## deploy to production 
    - name: Deploy to prod
      uses: fifsky/ssh-action@master
      if: contains(github.ref, 'release')
      with:
        command: |
              sudo docker pull ${{ secrets.DOCKER_REPO }}/codesquad-airbnb-team21-prod1
              ./deploy.sh
        host: ${{ secrets.HOST }}
        user: ubuntu
        key: ${{ secrets.PRIVATE_KEY}}
